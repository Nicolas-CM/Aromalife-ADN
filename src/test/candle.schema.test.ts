import { candleCustomizationSchema } from "../schemas/candle.schema";

describe("CandleCustomization Schema", () => {
  it("debe requerir URL de imagen válida", () => {
    const invalidData = {
      user: "641a9f0b2f7b88a9b8e7c888",
      containerId: "641a9f0b2f7b88a9b8e7c777",
      fragranceId: "641a9f0b2f7b88a9b8e7c666",
      customImage: "no-es-url",
      status: "draft",
    };

    const result = candleCustomizationSchema.safeParse(invalidData);
    expect(result.success).toBe(false);
    if (!result.success) {
      expect(result.error.issues[0].message).toContain("Invalid URL format");
    }
  });

  it("debe permitir mensajes de IA opcionales", () => {
    const validData = {
      user: "641a9f0b2f7b88a9b8e7c888",
      containerId: "641a9f0b2f7b88a9b8e7c777",
      fragranceId: "641a9f0b2f7b88a9b8e7c666",
      customImage: "https://example.com/image.jpg",
      status: "completed",
      aiMessage: "Generated by AI",
    };

    expect(() => candleCustomizationSchema.parse(validData)).not.toThrow();
  });

  describe("containerId y fragranceId", () => {
    it("deben tener formato de ObjectId válido", () => {
      const invalidData = {
        user: "641a9f0b2f7b88a9b8e7c888",
        containerId: "invalid-id",
        fragranceId: "invalid-id",
        customImage: "https://example.com/image.jpg",
        status: "draft",
      };

      const result = candleCustomizationSchema.safeParse(invalidData);
      expect(result.success).toBe(false);
      if (!result.success) {
        expect(result.error.issues[0].message).toContain("Invalid ObjectId format");
      }
    });
  });

  it("debe requerir un estado válido", () => {
    const invalidData = {
      user: "641a9f0b2f7b88a9b8e7c888",
      containerId: "641a9f0b2f7b88a9b8e7c777",
      fragranceId: "641a9f0b2f7b88a9b8e7c666",
      customImage: "https://example.com/image.jpg",
      status: "unknown-status",
    };

    const result = candleCustomizationSchema.safeParse(invalidData);
    expect(result.success).toBe(false);
    if (!result.success) {
      expect(result.error.issues[0].message).toContain("Status must be 'draft' or 'completed'");
    }
  });
});
